type Volunteer {
    id: ID!,
    name: String,
    surname: String,
    birthDate: Long,
    photoUrl: String,
    user: User
}

input VolunteerInput {
    name: String,
    surname: String,
    birthDate: Long,
    user: UserInput
}

extend type Query {
    getVolunteers: [Volunteer],
    getVolunteer(id: ID!): Volunteer,

    unprGetVolunteers: [Volunteer],
    unprGetVolunteer(id: ID!): Volunteer
}

extend type Mutation {
    createVolunteer(volunteer: VolunteerInput): Volunteer,
    updateVolunteer(id: ID!, volunteer: VolunteerInput): Volunteer,
    deleteVolunteer(id: ID!): [Volunteer],
    deleteVolunteers: [Volunteer],

    unprCreateVolunteer(volunteer: VolunteerInput): Volunteer,
    unprUpdateVolunteer(id: ID!, volunteer: VolunteerInput): Volunteer,
    unprDeleteVolunteer(id: ID!): [Volunteer],
    unprDeleteVolunteers: [Volunteer]

    registerAuthorizeVol(volunteer: VolunteerInput): Credentials
}