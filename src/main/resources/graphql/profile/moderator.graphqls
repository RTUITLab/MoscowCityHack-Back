scalar Long

type Moderator {
    id: ID!,
    name: String,
    surname: String,
    birthDate: Long,
    photoUrl: String,
    user: User
}

input ModeratorInput {
    name: String,
    surname: String,
    birthDate: Long,
    user: UserInput
}

extend type Query {
    getModerators: [Moderator],
    getModerator(id: ID!): Moderator

    unprGetModerators: [Moderator],
    unprGetModerator(id: ID!): Moderator
}

extend type Mutation {
    createModerator(moderator: ModeratorInput): Moderator,
    updateModerator(id: ID!, moderator: ModeratorInput): Moderator,
    deleteModerator(id: ID!): [Moderator],
    deleteModerators: [Moderator]

    unprCreateModerator(moderator: ModeratorInput): Moderator,
    unprUpdateModerator(id: ID!, moderator: ModeratorInput): Moderator,
    unprDeleteModerator(id: ID!): [Moderator],
    unprDeleteModerators: [Moderator]

    registerAuthorizeMod(moderator: ModeratorInput): Credentials
}